C51 COMPILER V9.53.0.0   I2C                                                               11/29/2023 09:40:35 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN I2C.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE I2C.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /**************************************************************************************************
   2          Nom du fichier : Lab2I2C
   3          Auteur : Xavier Champoux                 
   4          Date de création : 06-09-2023
   5          Version 1.0
   6             
   7            Ce programme sert à la créationde fonctions pour la mémoire 24LC32 et la communication I2C
   8              
   9              Versions:
  10              1.0 - 06 Septembre 2023:  Première version 
  11            
  12          ***************************************************************************************************/
  13          
  14          // *************************************************************************************************
  15          //  INCLUDES
  16          // *************************************************************************************************  
  17          
  18          #include <stdio.h>          // Prototype de declarations des fonctions I/O
  19            
  20          #include "ds89c450.h"       // Définition des bits et des registres du microcontrôleur
  21          #include "Dallas.h"
  22          #include "I2C.h"
  23          // *************************************************************************************************
  24          //  CONSTANTES
  25          // *************************************************************************************************
  26          #define VERSION_MAJEUR      1
  27          #define VERSION_MINEUR      0
  28          
  29          // *************************************************************************************************
  30          //  FONCTIONS LOCALES
  31          // *************************************************************************************************
  32          
  33          void vI2CDelai (unsigned int iTemps);
  34          void vI2CEcrire1Bit(bit bBit);
  35          bit blI2CLire1Bit();
  36          
  37          
  38          // *************************************************************************************************
  39          //  STRUCTURES ET UNIONS
  40          // *************************************************************************************************
  41          /* VIDE */
  42          
  43          // *************************************************************************************************
  44          // VARIABLES GLOBALES
  45          // *************************************************************************************************
  46          /* VIDE */
  47          
  48          // *************************************************************************************************
  49          // VARIABLES LOCALES
  50          // *************************************************************************************************
  51          /* VIDE */
  52          
  53          void vI2CStartBit(void)
  54          //
  55          //  Auteur: Stéphane Deschênes  
C51 COMPILER V9.53.0.0   I2C                                                               11/29/2023 09:40:35 PAGE 2   

  56          //  Date de création :  20 mai 2021
  57          //  Version 1.0
  58          //
  59          //  Description: Effectue un start bit sur SDA et SCL
  60          //  Paramètres d'entrées : Aucun
  61          //  Paramètres de sortie : Aucun
  62          //  Notes                :  Passage de 1 à 0 sur la ligne SDA durant un niveau haut de SCL
  63          // *************************************************************************************************
  64          {
  65   1        //NOTE: I2C_DELAI est un #define qui est = 1
  66   1        SDA = 1;
  67   1        vI2CDelai (I2C_DELAI);
  68   1        SCL = 1;
  69   1        vI2CDelai (I2C_DELAI);
  70   1        SDA = 0;
  71   1        vI2CDelai (I2C_DELAI);
  72   1        SCL = 0;
  73   1        vI2CDelai (I2C_DELAI);
  74   1      }
  75          // *************************************************************************************************
  76          void vI2CStopBit(void)
  77          //
  78          //  Auteur: Xavier Champoux   
  79          //  Date de création :  06 septembre 2023
  80          //  Version 1.0
  81          //
  82          //  Description: Effectue un stop bit sur SDA et SCL
  83          //  Paramètres d'entrées : Aucun
  84          //  Paramètres de sortie : Aucun
  85          //  Notes                :  Passage de 0 à 1 sur la ligne SDA durant un niveau haut de SCL
  86          // *************************************************************************************************
  87          {
  88   1        //NOTE: I2C_DELAI est un #define qui est = 1
  89   1        SCL = 0;
  90   1        vI2CDelai (I2C_DELAI);
  91   1        SDA = 0;
  92   1        vI2CDelai (I2C_DELAI);
  93   1        SCL = 1;
  94   1        vI2CDelai (I2C_DELAI);
  95   1        SDA = 1;
  96   1        vI2CDelai (I2C_DELAI);
  97   1      }
  98          // *************************************************************************************************
  99          void vI2CDelai (unsigned int iTemps)
 100          //
 101          //  Auteur: Stéphane Deschênes  
 102          //  Date de création :  20 mai 2021
 103          //  Version 1.0
 104          //
 105          //  Description: Délai pour la communication I2C
 106          //  Paramètres d'entrées : Aucun
 107          //  Paramètres de sortie : Aucun
 108          //  Variables utilisées  : Aucun
 109          //  Equate               : Aucun
 110          //  #Define              : Aucun
 111          // *************************************************************************************************
 112            {
 113   1          while (iTemps > 0)
 114   1          {
 115   2            iTemps --;
 116   2          }
 117   1        }
C51 COMPILER V9.53.0.0   I2C                                                               11/29/2023 09:40:35 PAGE 3   

 118          // *************************************************************************************************
 119            void vI2CEcrire1Bit(bit bBit)
 120          //
 121          //  Auteur: Xavier Champoux   
 122          //  Date de création :  06 septembre 2023
 123          //  Version 1.0
 124          //
 125          //  Description: Ecrire un bit sur SDA dans une communicatgion I2C
 126          //  Paramètres d'entrées : Aucun
 127          //  Paramètres de sortie : Aucun
 128          //  Notes                : Écriture d'un bit 
 129          // *************************************************************************************************
 130          {
 131   1        SCL = 0;
 132   1        vI2CDelai (I2C_DELAI);
 133   1        SDA = bBit;
 134   1        vI2CDelai (I2C_DELAI);
 135   1        SCL = 1;
 136   1        vI2CDelai (I2C_DELAI);
 137   1        SCL = 0;
 138   1        vI2CDelai (I2C_DELAI);
 139   1      }
 140          // *************************************************************************************************
 141            bit blI2CLire1Bit()
 142          //
 143          //  Auteur: Xavier Champoux   
 144          //  Date de création :  06 septembre 2023
 145          //  Version 1.0
 146          //
 147          //  Description: Lire un bit sur SDA dans une communicatgion I2C
 148          //  Paramètres d'entrées : Aucun
 149          //  Paramètres de sortie : Aucun
 150          //  Notes                : Écriture d'un bit 
 151          // *************************************************************************************************
 152          {
 153   1        bit bLecture;
 154   1        SDA = 1;
 155   1        vI2CDelai (I2C_DELAI);
 156   1        SCL = 0;
 157   1        vI2CDelai (I2C_DELAI);
 158   1        SCL = 1;
 159   1        vI2CDelai (I2C_DELAI);
 160   1        bLecture = SDA;
 161   1        vI2CDelai (I2C_DELAI);
 162   1        SCL = 0;
 163   1        vI2CDelai (I2C_DELAI);
 164   1        return bLecture;
 165   1      }
 166          // *************************************************************************************************
 167          void vI2CEcrire8Bits(unsigned char ucTxData)
 168          //
 169          //  Auteur: Xavier Champoux   
 170          //  Date de création :  06 septembre 2023
 171          //  Version 1.0
 172          //
 173          //  Description: Lire un bit sur SDA dans une communicatgion I2C
 174          //  Paramètres d'entrées : Aucun
 175          //  Paramètres de sortie : Aucun
 176          //  Notes                : Écriture d'un bit 
 177          // *************************************************************************************************
 178          {
 179   1        unsigned char i;
C51 COMPILER V9.53.0.0   I2C                                                               11/29/2023 09:40:35 PAGE 4   

 180   1        for (i=0; i<8; i++)
 181   1        {
 182   2          if ((ucTxData & 0x80)==0x80)
 183   2          {
 184   3            vI2CEcrire1Bit(1);
 185   3          }
 186   2          else
 187   2          {
 188   3            vI2CEcrire1Bit(0);
 189   3          }
 190   2          
 191   2          ucTxData = ucTxData << 1;       
 192   2        }
 193   1        blI2CLire1Bit();
 194   1      }
 195          
 196          // *************************************************************************************************
 197          unsigned char ucI2CLire8Bits (bit bAckValue)
 198          //
 199          //  Auteur: Xavier Champoux   
 200          //  Date de création :  06 septembre 2023
 201          //  Version 1.0
 202          //
 203          //  Description: Lire un bit sur SDA dans une communicatgion I2C
 204          //  Paramètres d'entrées : Aucun
 205          //  Paramètres de sortie : Aucun
 206          //  Notes                : Écriture d'un bit 
 207          // *************************************************************************************************
 208          {
 209   1        unsigned char ucRecu = 0x00;
 210   1        unsigned char i;
 211   1        for (i=0; i<8; i++)
 212   1        {
 213   2          ucRecu = ucRecu << 1;
 214   2          if(blI2CLire1Bit() != 0)
 215   2          {
 216   3            ucRecu = ucRecu+1;
 217   3          }
 218   2        }
 219   1        vI2CEcrire1Bit(bAckValue);
 220   1        return ucRecu;
 221   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    175    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       3
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
